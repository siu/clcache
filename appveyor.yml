environment:
  matrix:
    # AppVeyor installed Python versions
    # http://www.appveyor.com/docs/installed-software#python

    - PYTHON_INSTALL: "C:\\Python33"
    - PYTHON_INSTALL: "C:\\Python34"
    - PYTHON_INSTALL: "C:\\Python35"
    - PYTHON_INSTALL: "C:\\Python36"

install:
  - appveyor DownloadFile "http://s3.amazonaws.com/downloads.northscale.com/memcached-win64-1.4.4-14.zip" -FileName memcached.zip
  - 7z x memcached.zip -y
  - ps: $Memcached = Start-Process memcached\memcached.exe -PassThru

  # Make compiler available (use MSVC 2013, 32 bit)
  - call "%ProgramFiles(x86)%\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" x86

  # Check compiler version
  - cl

  # Prepend Python installation to PATH
  - set PATH=%PYTHON_INSTALL%;%PATH%

  # Prepend Python scripts to PATH (e.g. pip, py.test, pylint)
  - set PATH=%PYTHON_INSTALL%\\Scripts;%PATH%

  # Check Python version
  - python --version

  # Check pip version
  - pip --version

  # Install pytest
  - pip install pytest

  # Install pylint (installs pylint.exe in %PYTHON_INSTALL%\Scripts)
  - pip install pylint
  - pylint --version

  # Install coverage plugin for pytest
  - pip install pytest-cov
  
  # Install the package
  - pip install .

  # Install tool for uploading coverage data to codecov.io
  - pip install codecov
  - coverage --version

  # Install dependencies for clcachesrv such that we can lint the source code
  - pip install -r server\requirements.txt

  # Install pymemcache for memcache storage
  - pip install pymemcache

cache:
  - '%LOCALAPPDATA%\pip\Cache -> appveyor.yml'
  - memcached -> appveyor.yml

build_script:
  - clcache --help
  - python clcache.py --help
  - python clcache.py -s
  - pylint --rcfile=.pylintrc clcache.py
  - pylint --rcfile=.pylintrc storage.py
  - pylint --rcfile=.pylintrc unittests.py
  - pylint --rcfile=.pylintrc --disable=no-member integrationtests.py
  - pylint --rcfile=.pylintrc performancetests.py

  # Disable no-member test here to work around issue in Pylint 1.7.1
  - pylint --rcfile=.pylintrc --disable=no-member server\clcachesrv.py

test_script:
  # Run test files via py.test and generate JUnit XML. Then push test results
  # to appveyor. The plugin pytest-cov takes care of coverage.
  - ps: |
      & py.test --junitxml .\unittests.xml unittests.py --cov=clcache --cov=storage
      $testsExitCode = $lastexitcode
      & coverage report
      & coverage xml

      $wc = New-Object 'System.Net.WebClient'
      $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\unittests.xml))

      & codecov --no-color -X gcov -F unittests -e PYTHON_INSTALL

      if ($testsExitCode -ne 0) {exit $testsExitCode}

  - coverage erase
  - del /Q coverage.xml

  - ps: |
      & py.test --junitxml .\integrationtests.xml integrationtests.py --cov=clcache
      $testsExitCode = $lastexitcode
      & coverage report
      & coverage xml

      $wc = New-Object 'System.Net.WebClient'
      $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\integrationtests.xml))

      & codecov --no-color -X gcov -F integrationtests -e PYTHON_INSTALL

      if ($testsExitCode -ne 0) {exit $testsExitCode}

  - set CLCACHE_MEMCACHED=127.0.0.1:11211
  - ps: |
      & py.test --junitxml .\integrationtests.xml integrationtests.py --cov=clcache --cov=storage
      $testsExitCode = $lastexitcode
      & coverage report
      & coverage xml

      $wc = New-Object 'System.Net.WebClient'
      $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\integrationtests.xml))

      & codecov --no-color -X gcov -F integrationtests_memcached -e PYTHON_INSTALL

      if ($testsExitCode -ne 0) {exit $testsExitCode}

  - coverage erase
  - del /Q coverage.xml
  - set "CLCACHE_MEMCACHED="

on_finish:
  - ps: Stop-Process -Id $Memcached.Id

on_success:
  # Creates executable with PyInstaller
  - pip install pyinstaller pypiwin32
  - pyinstaller clcache.py
  - for /F %%i in ('python -c "import clcache; print(clcache.VERSION)"') do set CLCACHE_VERSION=%%i
  - "echo Version: %CLCACHE_VERSION"
  - move dist\clcache clcache-%CLCACHE_VERSION%
  
  # Build the Chocolatey package
  - sed -i "s/{VERSION}/%CLCACHE_VERSION%/g" clcache.nuspec
  - choco pack
  
  # Test the compiled extension
  - cd clcache-%CLCACHE_VERSION%
  - clcache.exe --help
  - clcache.exe -s
  - cd ..
  
  # Test the chocolatey package
  - ps: ls clcache.${env:CLCACHE_VERSION}.nupkg
  - choco install "clcache.%CLCACHE_VERSION%.nupkg" --version=%CLCACHE_VERSION%
  - C:\ProgramData\chocolatey\bin\clcache.exe --help
  - C:\ProgramData\chocolatey\bin\clcache.exe -s
  
  # Publish artifacts  
  - cd clcache-%CLCACHE_VERSION%
  - 7z a -y clcache-%CLCACHE_VERSION%.zip
  - move clcache-%CLCACHE_VERSION%.zip ..
  - cd ..
  - echo PYTHON_INSTALL=%PYTHON_INSTALL%
  # Disable for Python 3.5, because of PyInstaller problems on older Windows
  - if not [%PYTHON_INSTALL%]==["C:\Python35"] set PUBLISH=1
  - sha256sum clcache.%CLCACHE_VERSION%.nupkg clcache-%CLCACHE_VERSION%.zip
  - sha256sum clcache.%CLCACHE_VERSION%.nupkg clcache-%CLCACHE_VERSION%.zip > SHA256SUM
  - if "%PUBLISH%"=="1" appveyor PushArtifact clcache.%CLCACHE_VERSION%.nupkg
  - if "%PUBLISH%"=="1" appveyor PushArtifact clcache-%CLCACHE_VERSION%.zip
  - if "%PUBLISH%"=="1" appveyor PushArtifact SHA256SUM
